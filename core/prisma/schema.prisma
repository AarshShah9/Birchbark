// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Doctor {
  id                 Int                  @id @default(autoincrement())
  name               String
  // Add the relation field for DoctorAppointments
  doctorAppointments DoctorAppointments[]
  AppointmentDoctors AppointmentDoctors[]
}

model Patient {
  id                  Int                   @id @default(autoincrement())
  name                String
  // Add the relation field for PatientAppointments
  patientAppointments PatientAppointments[]
  AppointmentPatients AppointmentPatients[]
}

model Clinic {
  id                 Int                  @id @default(autoincrement())
  name               String
  // Add the relation field for AppointmentClinics
  appointmentClinics AppointmentClinics[]
}

model Appointment {
  id              Int       @id @default(autoincrement())
  subject         String    // Subject of the appointment
  startTime       DateTime  // Start date and time of the appointment
  endTime         DateTime  // End date and time of the appointment
  location        String?   // Location of the appointment (optional)
  description     String?   // Description of the appointment (optional)
  recurrenceRule  String?   // Recurrence rule for recurring appointments (optional)
  isAllDay        Boolean   // Whether the appointment is an all-day event
  isReadOnly      Boolean   // Whether the appointment is read-only
  calendarId      Int       // ID of the associated calendar
  doctorId        Int       // ID of the associated doctor

  // Relationships
  appointmentDoctors  AppointmentDoctors[]
  appointmentPatients AppointmentPatients[]
  appointmentClinics  AppointmentClinics[]
  DoctorAppointments  DoctorAppointments[]
  PatientAppointments PatientAppointments[]

  // Indexes
  @@index([startTime, endTime]) // Index for querying appointments by time range
}



model DoctorAppointments {
  doctorId      Int
  appointmentId Int

  doctor      Doctor      @relation(fields: [doctorId], references: [id])
  appointment Appointment @relation(fields: [appointmentId], references: [id])

  @@id([doctorId, appointmentId])
}

model PatientAppointments {
  patientId     Int
  appointmentId Int

  patient     Patient     @relation(fields: [patientId], references: [id])
  appointment Appointment @relation(fields: [appointmentId], references: [id])

  @@id([patientId, appointmentId])
}

model AppointmentDoctors {
  appointmentId Int
  doctorId      Int

  appointment Appointment @relation(fields: [appointmentId], references: [id])
  doctor      Doctor      @relation(fields: [doctorId], references: [id])

  @@id([appointmentId, doctorId])
}

model AppointmentPatients {
  appointmentId Int
  patientId     Int

  appointment Appointment @relation(fields: [appointmentId], references: [id])
  patient     Patient     @relation(fields: [patientId], references: [id])

  @@id([appointmentId, patientId])
}

model AppointmentClinics {
  appointmentId Int
  clinicId      Int

  appointment Appointment @relation(fields: [appointmentId], references: [id])
  clinic      Clinic      @relation(fields: [clinicId], references: [id])

  @@id([appointmentId, clinicId])
}
